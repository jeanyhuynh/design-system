{"remainingRequest":"/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tranghuynh/Documents/design-system/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/tranghuynh/Documents/design-system/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/tranghuynh/Documents/design-system/components/scrollspy/README.md?vue&type=template&id=1afd6c94&","dependencies":[{"path":"/Users/tranghuynh/Documents/design-system/components/scrollspy/README.md","mtime":1558491787796},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"content\" },\n    [\n      _c(\n        \"ClientOnly\",\n        [\n          _c(\"h1\", { attrs: { id: \"scrollspy\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#scrollspy\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Scrollspy\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _c(\"strong\", [\n              _vm._v(\n                \"Automatically update Bootstrap navigation or list group components based on scroll position to indicate which link is currently active in the viewport.\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"how-it-works\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#how-it-works\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" How it works\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"Scrollspy has a few requirements to function properly:\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [\n              _vm._v(\"If you’re building our JavaScript from source, it \"),\n              _c(\n                \"a\",\n                {\n                  attrs: {\n                    href:\n                      \"https://getbootstrap.com/docs/4.3/getting-started/javascript/#util\",\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\"\n                  }\n                },\n                [_vm._v(\"requires util.js\"), _c(\"OutboundLink\")],\n                1\n              ),\n              _vm._v(\".\")\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"li\",\n              [\n                _vm._v(\"It must be used on a Bootstrap \"),\n                _c(\"router-link\", { attrs: { to: \"/components/navs/\" } }, [\n                  _vm._v(\"nav component\")\n                ]),\n                _vm._v(\" or \"),\n                _c(\n                  \"router-link\",\n                  { attrs: { to: \"/components/list-group/#basic-example\" } },\n                  [_vm._v(\"list group\")]\n                ),\n                _vm._v(\".\")\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\"Scrollspy requires \"),\n              _c(\"code\", [_vm._v(\"position: relative;\")]),\n              _vm._v(\" on the element you’re spying on, usually the \"),\n              _c(\"code\", [_vm._v(\"<body>\")]),\n              _vm._v(\".\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\"When spying on elements other than the \"),\n              _c(\"code\", [_vm._v(\"<body>\")]),\n              _vm._v(\", be sure to have a \"),\n              _c(\"code\", [_vm._v(\"height\")]),\n              _vm._v(\" set and \"),\n              _c(\"code\", [_vm._v(\"overflow-y: scroll\")]),\n              _vm._v(\"; applied.\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\"Anchors (\"),\n              _c(\"code\", [_vm._v(\"<a>\")]),\n              _vm._v(\") are required and must point to an element with that \"),\n              _c(\"code\", [_vm._v(\"id\")]),\n              _vm._v(\".\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"When successfully implemented, your nav or list group will update accordingly, moving the \"\n            ),\n            _c(\"code\", [_vm._v(\".active\")]),\n            _vm._v(\n              \" class from one item to the next based on their associated targets.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"example-in-navbar\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#example-in-navbar\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Example in navbar\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Scroll the area below the navbar and watch the active class change. The dropdown items will be highlighted as well.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", {\n            attrs: { elementCode: _vm.content.scroll_Id_1 }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.HTML,\n              content: _vm.content.scroll_Id_1\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"example-with-nested-nav\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: {\n                  href: \"#example-with-nested-nav\",\n                  \"aria-hidden\": \"true\"\n                }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Example with nested nav\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"Scrollspy also works with nested \"),\n            _c(\"code\", [_vm._v(\".nav\")]),\n            _vm._v(\"s. If a nested \"),\n            _c(\"code\", [_vm._v(\".nav\")]),\n            _vm._v(\" is \"),\n            _c(\"code\", [_vm._v(\".active\")]),\n            _vm._v(\", its parents will also be \"),\n            _c(\"code\", [_vm._v(\".active\")]),\n            _vm._v(\n              \". Scroll the area next to the navbar and watch the active class change.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", {\n            attrs: { elementCode: _vm.content.scroll_Id_2 }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.HTML,\n              content: _vm.content.scroll_Id_2\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"example-with-list-group\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: {\n                  href: \"#example-with-list-group\",\n                  \"aria-hidden\": \"true\"\n                }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Example with list-group\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"Scrollspy also works with \"),\n            _c(\"code\", [_vm._v(\".list-group\")]),\n            _vm._v(\n              \"s. Scroll the area next to the list group and watch the active class change.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", {\n            attrs: { elementCode: _vm.content.scroll_Id_3 }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.HTML,\n              content: _vm.content.scroll_Id_3\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"usage\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#usage\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Usage\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"h3\", { attrs: { id: \"via-data-attributes\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#via-data-attributes\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Via data attributes\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"To easily add scrollspy behavior to your topbar navigation, add \"\n            ),\n            _c(\"code\", [_vm._v('data-spy=\"scroll\"')]),\n            _vm._v(\n              \" to the element you want to spy on (most typically this would be the \"\n            ),\n            _c(\"code\", [_vm._v(\"<body>\")]),\n            _vm._v(\"). Then add the \"),\n            _c(\"code\", [_vm._v(\"data-target\")]),\n            _vm._v(\n              \" attribute with the ID or class of the parent element of any Bootstrap \"\n            ),\n            _c(\"code\", [_vm._v(\".nav\")]),\n            _vm._v(\" component.\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.CSS,\n              content: _vm.content.scroll_Id_4\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.HTML,\n              content: _vm.content.scroll_Id_5\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"via-javascript\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#via-javascript\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Via JavaScript\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"After adding \"),\n            _c(\"code\", [_vm._v(\"position: relative;\")]),\n            _vm._v(\" in your CSS, call the scrollspy via JavaScript:\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.JS,\n              content: _vm.content.scroll_Id_6\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"blockquote\", [\n            _c(\"p\", [_c(\"strong\", [_vm._v(\"Resolvable ID targets required\")])]),\n            _vm._v(\" \"),\n            _c(\"p\", [\n              _vm._v(\n                \"Navbar links must have resolvable id targets. For example, a \"\n              ),\n              _c(\"code\", [_vm._v('<a href=\"#home\">home</a>')]),\n              _vm._v(\" must correspond to something in the DOM like \"),\n              _c(\"code\", [_vm._v('<div id=\"home\"></div>')]),\n              _vm._v(\".\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"blockquote\", [\n            _c(\"p\", [\n              _c(\"strong\", [\n                _vm._v(\"Non-:\"),\n                _c(\"code\", [_vm._v(\"visible\")]),\n                _vm._v(\" target elements ignored\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", [\n              _vm._v(\"Target elements that are not \"),\n              _c(\n                \"a\",\n                {\n                  attrs: {\n                    href: \"https://api.jquery.com/visible-selector/\",\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\"\n                  }\n                },\n                [\n                  _c(\"code\", [_vm._v(\":visible according to jQuery\")]),\n                  _c(\"OutboundLink\")\n                ],\n                1\n              ),\n              _vm._v(\n                \" will be ignored and their corresponding nav items will never be highlighted.\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"methods\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#methods\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Methods\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"h3\", { attrs: { id: \"scrollspy-refresh\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#scrollspy-refresh\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"code\", [_vm._v(\".scrollspy('refresh')\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"When using scrollspy in conjunction with adding or removing of elements from the DOM, you’ll need to call the refresh method like so:\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.JS,\n              content: _vm.content.scroll_Id_7\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"h3\", { attrs: { id: \"scrollspy-dispose\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#scrollspy-dispose\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"code\", [_vm._v(\".scrollspy('dispose')\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [_vm._v(\"Destroys an element’s scrollspy.\")]),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"options\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#options\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Options\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Options can be passed via data attributes or JavaScript. For data attributes, append the option name to \"\n            ),\n            _c(\"code\", [_vm._v(\"data-\")]),\n            _vm._v(\", as in \"),\n            _c(\"code\", [_vm._v('data-offset=\"\"')]),\n            _vm._v(\".\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"table\", [\n            _c(\"thead\", [\n              _c(\"tr\", [\n                _c(\"th\", [_vm._v(\"Name\")]),\n                _vm._v(\" \"),\n                _c(\"th\", [_vm._v(\"Type\")]),\n                _vm._v(\" \"),\n                _c(\"th\", [_vm._v(\"Default\")]),\n                _vm._v(\" \"),\n                _c(\"th\", [_vm._v(\"Description\")])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"tbody\", [\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"offset\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(\"number\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(\"10\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [\n                  _vm._v(\n                    \"Pixels to offset from top when calculating position of scroll.\"\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"method\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(\"string\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(\"auto\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [\n                  _vm._v(\"Finds which section the spied element is in. \"),\n                  _c(\"code\", [_vm._v(\"auto\")]),\n                  _vm._v(\n                    \" will choose the best method get scroll coordinates. \"\n                  ),\n                  _c(\"code\", [_vm._v(\"offset\")]),\n                  _vm._v(\n                    \" will use jQuery offset method to get scroll coordinates. \"\n                  ),\n                  _c(\"code\", [_vm._v(\"position\")]),\n                  _vm._v(\n                    \" will use jQuery position method to get scroll coordinates.\"\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"target\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(\"string\")]),\n                _vm._v(\" \"),\n                _c(\"td\"),\n                _vm._v(\" \"),\n                _c(\"td\", [\n                  _vm._v(\"Specifies element to apply Scrollspy plugin.\")\n                ])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"events\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#events\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Events\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"table\", [\n            _c(\"thead\", [\n              _c(\"tr\", [\n                _c(\"th\", [_vm._v(\"Event Type\")]),\n                _vm._v(\" \"),\n                _c(\"th\", [_vm._v(\"Description\")])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"tbody\", [\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"activate.bs.scrollspy\")]),\n                _vm._v(\" \"),\n                _c(\"td\", [\n                  _vm._v(\n                    \"This event fires on the scroll element whenever a new item becomes activated by the scrollspy.\"\n                  )\n                ])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.JS,\n              content: _vm.content.scroll_Id_8\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"br\")\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}