{"remainingRequest":"/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tranghuynh/Documents/design-system/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/tranghuynh/Documents/design-system/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/tranghuynh/Documents/design-system/components/input-group/README.md?vue&type=template&id=5ac2b801&","dependencies":[{"path":"/Users/tranghuynh/Documents/design-system/components/input-group/README.md","mtime":1557917916564},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tranghuynh/Documents/design-system/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"content\" },\n    [\n      _c(\n        \"ClientOnly\",\n        [\n          _c(\"h1\", { attrs: { id: \"input-group\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#input-group\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Input group\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _c(\"strong\", [\n              _vm._v(\n                \"Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs, custom selects, and custom file inputs.\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"basic-example\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#basic-example\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Basic example\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Place one add-on or button on either side of an input. You may also place one on both sides of an input. Remember to place \"\n            ),\n            _c(\"code\", [_vm._v(\"<label>\")]),\n            _vm._v(\"s outside the input group.\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_1 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_1 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"wrapping\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#wrapping\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Wrapping\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"Input groups wrap by default via \"),\n            _c(\"code\", [_vm._v(\"flex-wrap: wrap\")]),\n            _vm._v(\n              \" in order to accommodate custom form field validation within an input group. You may disable this with \"\n            ),\n            _c(\"code\", [_vm._v(\".flex-nowrap\")]),\n            _vm._v(\".\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_2 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_2 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"sizing\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#sizing\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Sizing\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"Add the relative form sizing classes to the \"),\n            _c(\"code\", [_vm._v(\".input-group\")]),\n            _vm._v(\n              \" itself and contents within will automatically resize—no need for repeating the form control size classes on each element.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _c(\"strong\", [\n              _vm._v(\n                \"Sizing on the individual input group elements isn’t supported.\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_3 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_3 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"checkboxes-and-radios\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#checkboxes-and-radios\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Checkboxes and radios\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Place any checkbox or radio option within an input group’s addon instead of text.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_4 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_4 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"multiple-inputs\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#multiple-inputs\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Multiple inputs\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"While multiple \"),\n            _c(\"code\", [_vm._v(\"<input>\")]),\n            _vm._v(\n              \"s are supported visually, validation styles are only available for input groups with a single \"\n            ),\n            _c(\"code\", [_vm._v(\"<input>\")]),\n            _vm._v(\".\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_5 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_5 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"multiple-addons\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#multiple-addons\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Multiple addons\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Multiple add-ons are supported and can be mixed with checkbox and radio input versions.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_6 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_6 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"button-addons\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#button-addons\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Button addons\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Multiple add-ons are supported and can be mixed with checkbox and radio input versions.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_7 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_7 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"buttons-with-dropdowns\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: {\n                  href: \"#buttons-with-dropdowns\",\n                  \"aria-hidden\": \"true\"\n                }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Buttons with dropdowns\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_8 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_8 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"segmented-buttons\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#segmented-buttons\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Segmented buttons\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_9 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: { codeType: _vm.codeTypes.HTML, content: _vm.content.data_9 }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"custom-forms\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#custom-forms\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Custom forms\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Input groups include support for custom selects and custom file inputs. Browser default versions of these are not supported.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"h3\", { attrs: { id: \"custom-select\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#custom-select\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Custom select\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_10 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.HTML,\n              content: _vm.content.data_10\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"h3\", { attrs: { id: \"custom-file-input\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#custom-file-input\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Custom file input\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"element-slot\", { attrs: { elementCode: _vm.content.data_11 } }),\n          _vm._v(\" \"),\n          _c(\"source-code\", {\n            attrs: {\n              codeType: _vm.codeTypes.HTML,\n              content: _vm.content.data_11\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"h2\", { attrs: { id: \"accessibility\" } }, [\n            _c(\n              \"a\",\n              {\n                staticClass: \"header-anchor\",\n                attrs: { href: \"#accessibility\", \"aria-hidden\": \"true\" }\n              },\n              [_vm._v(\"#\")]\n            ),\n            _vm._v(\" Accessibility\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"br\"),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"Screen readers will have trouble with your forms if you don’t include a label for every input. For these input groups, ensure that any additional label or functionality is conveyed to assistive technologies.\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"The exact technique to be used (\"),\n            _c(\"code\", [_vm._v(\"<label>\")]),\n            _vm._v(\" elements hidden using the \"),\n            _c(\"code\", [_vm._v(\".sr-only\")]),\n            _vm._v(\" class, or use of the \"),\n            _c(\"code\", [_vm._v(\"aria-label\")]),\n            _vm._v(\" and \"),\n            _c(\"code\", [_vm._v(\"aria-labelledby\")]),\n            _vm._v(\" attributes, possibly in combination with \"),\n            _c(\"code\", [_vm._v(\"aria-describedby\")]),\n            _vm._v(\n              \") and what additional information will need to be conveyed will vary depending on the exact type of interface widget you’re implementing. The examples in this section provide a few suggested, case-specific approaches.\"\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}